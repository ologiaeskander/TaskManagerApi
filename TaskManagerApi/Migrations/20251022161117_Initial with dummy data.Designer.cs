// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskManagerApi.Data;

#nullable disable

namespace TaskManagerApi.Migrations
{
    [DbContext(typeof(TaskManagerContext))]
    [Migration("20251022161117_Initial with dummy data")]
    partial class Initialwithdummydata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaskManagerApi.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssignedToUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToUserId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssignedToUserId = 2,
                            CreatedAt = new DateTime(2025, 10, 17, 15, 45, 50, 0, DateTimeKind.Utc),
                            CreatorId = 1,
                            Description = "Improve layout and usability of homepage",
                            DueDate = new DateTime(2025, 10, 25, 15, 45, 50, 0, DateTimeKind.Utc),
                            Priority = 2,
                            ProjectId = 1,
                            Status = 1,
                            Title = "Redesign Homepage"
                        },
                        new
                        {
                            Id = 2,
                            AssignedToUserId = 2,
                            CreatedAt = new DateTime(2025, 10, 20, 15, 45, 50, 0, DateTimeKind.Utc),
                            CreatorId = 1,
                            Description = "Connect mobile app to backend API",
                            DueDate = new DateTime(2025, 11, 1, 15, 45, 50, 0, DateTimeKind.Utc),
                            Priority = 1,
                            ProjectId = 2,
                            Status = 0,
                            Title = "App API Integration"
                        },
                        new
                        {
                            Id = 3,
                            AssignedToUserId = 1,
                            CreatedAt = new DateTime(2025, 10, 12, 15, 45, 50, 0, DateTimeKind.Utc),
                            CreatorId = 1,
                            Description = "Schedule automated backups",
                            Priority = 0,
                            Status = 2,
                            Title = "Database Backup"
                        });
                });

            modelBuilder.Entity("TaskManagerApi.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 10, 22, 15, 45, 50, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Update company website and UI",
                            Name = "Website Revamp"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 10, 22, 15, 45, 50, 0, DateTimeKind.Utc),
                            CreatedBy = 1,
                            Description = "Develop a mobile app for our service",
                            Name = "Mobile App Launch"
                        });
                });

            modelBuilder.Entity("TaskManagerApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Department")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Phone")
                        .HasColumnType("int");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Department = 0,
                            Email = "youssef@example.com",
                            FullName = "Youssef Nabil",
                            Password = "hashed123",
                            Phone = 1234567890,
                            Role = 0,
                            Username = "youssef"
                        },
                        new
                        {
                            Id = 2,
                            Department = 1,
                            Email = "sara@example.com",
                            FullName = "Sara Magued",
                            Password = "hashed456",
                            Phone = 987654321,
                            Role = 1,
                            Username = "sara"
                        });
                });

            modelBuilder.Entity("TaskManagerApi.Models.Job", b =>
                {
                    b.HasOne("TaskManagerApi.Models.User", "AssignedToUser")
                        .WithMany()
                        .HasForeignKey("AssignedToUserId");

                    b.HasOne("TaskManagerApi.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskManagerApi.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.Navigation("AssignedToUser");

                    b.Navigation("Creator");

                    b.Navigation("Project");
                });
#pragma warning restore 612, 618
        }
    }
}
